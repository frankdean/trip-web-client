{
  "name": "trip-web-client",
  "version": "1.11.8",
  "description": "Trip Recording and Itinerary Planner web client",
  "author": {
    "name": "Frank Dean",
    "email": "support@fdsd.co.uk"
  },
  "license": "GPL-3.0+",
  "private": true,
  "keywords": [
    "track",
    "logging",
    "recording",
    "itinerary",
    "planner",
    "GPS"
  ],
  "overrides": {
    "semver": "^7.5.2",
    "xml2js": "^0.6.0"
  },
  "resolutions": {
    "semver": "^7.5.2",
    "xml2js": "^0.6.0"
  },
  "devDependencies": {
    "adm-zip": "^0.5.5",
    "copyfiles": "^2.1.1",
    "cssmin": "^0.4.3",
    "eslint": "^8.7.0",
    "jasmine-core": "^3.6.0",
    "karma": "^6.4.1",
    "karma-chrome-launcher": "^3.1.0",
    "karma-firefox-launcher": "^2.1.0",
    "karma-jasmine": "^4.0.1",
    "karma-junit-reporter": "^2.0.1",
    "karma-safari-launcher": "^1.0.0",
    "mkdirp": "^2.1.3",
    "protractor": "^7.0.0",
    "q": "^1.4.1",
    "rimraf": "^4.1.1",
    "shelljs": "^0.8.5",
    "tar": "^6.1.6",
    "uglify-js": "^3.5.0"
  },
  "dependencies": {
    "angular": "^1.8.0",
    "angular-animate": "^1.8.0",
    "angular-bootstrap-confirm": "^2.5.1",
    "angular-cookies": "^1.8.0",
    "angular-file-saver": "^1.1.3",
    "angular-i18n": "^1.8.0",
    "angular-jwt": "^0.1.9",
    "angular-loader": "^1.8.0",
    "angular-messages": "^1.8.0",
    "angular-mocks": "^1.8.0",
    "angular-pagedown": "git+https://github.com/frankdean/angular-pagedown#0.4.4-fork.1",
    "angular-paging": "^2.2.2",
    "angular-resource": "^1.8.0",
    "angular-route": "^1.8.0",
    "angular-sanitize": "^1.8.0",
    "angular-simple-logger": "^0.1.4",
    "angular-socket-io": "^0.7.0",
    "angular-ui-bootstrap": "^2.2.0",
    "angular-validation-match": "^1.9.0",
    "bootstrap": "~3.4.0",
    "cf-blob.js": "^0.0.1",
    "html5-boilerplate": "~7.3.0",
    "leaflet": "~1.6.0",
    "leaflet-draw": "^1.0.4",
    "open-location-code": "git+https://github.com/google/open-location-code.git#1.0.4",
    "pagedown": "git+https://github.com/frankdean/PageDown.git#1.1.0-fix.1",
    "proj4": "^2.4.4",
    "simplify-js": "1.2.4",
    "socket.io-client": "^4.5.4",
    "ui-leaflet": "git+https://github.com/frankdean/ui-leaflet.git#v1.0.4-rc.2",
    "ui-leaflet-draw": "https://github.com/frankdean/ui-leaflet-draw#65f7d8c403990b3c24a1bcea9a3a1f0257be9529",
    "zxcvbn": "^4.4.2"
  },
  "engines": {
    "yarn": ">= 1.0.0"
  },
  "scripts": {
    "postinstall": "node -e \"try { require('fs').symlinkSync(require('path').relative('app', 'node_modules'), 'app/node_modules', 'junction') } catch (e) { }\"",
    "prestart": "$npm_execpath install",
    "start": "cd ../trip-server && node index.js",
    "pretest": "$npm_execpath install",
    "test": "karma start test/karma.conf.js",
    "test-single-run": "karma start test/karma.conf.js  --single-run",
    "preupdate-webdriver": "$npm_execpath install",
    "update-webdriver-chrome-XX.x.xxxx.xx": "webdriver-manager update --versions.chrome=XX.x.xxxx.xx",
    "update-webdriver-113": "webdriver-manager update --versions.chrome=113.0.5672.63",
    "update-webdriver-110": "webdriver-manager update --versions.chrome=111.0.5563.110",
    "update-webdriver": "webdriver-manager update",
    "preprotractor": "$npm_execpath run update-webdriver-113",
    "protractor": "protractor test/protractor.conf.js",
    "dist-update-index-async": "node -e \"const shell = require('shelljs'); shell.sed('-i', /    \\/\\/ You need to run .yarn run update-index-async. to inject the angular async code here/, shell.sed(/sourceMappingURL=angular-loader.min.js.map/,'sourceMappingURL=node_modules/angular-loader/angular-loader.min.js.map','app/node_modules/angular-loader/angular-loader.min.js'), 'dist/app/index-async.html');\"",
    "update-index-async": "node -e \"const shell = require('shelljs'); shell.sed('-i', /    \\/\\/ You need to run .yarn run update-index-async. to inject the angular async code here/, shell.sed(/sourceMappingURL=angular-loader.min.js.map/,'sourceMappingURL=node_modules/angular-loader/angular-loader.min.js.map','app/node_modules/angular-loader/angular-loader.min.js'), 'app/index-async.html');\"",
    "disable-debug": "node -e \"const shell = require('shelljs'); shell.sed('-i', /$compileProvider.debugInfoEnabled\\(true\\)/, '$compileProvider.debugInfoEnabled(false)', 'app/js/app.js');\"",
    "enable-debug": "node -e \"const shell = require('shelljs'); shell.sed('-i', /$compileProvider.debugInfoEnabled\\(false\\)/, '$compileProvider.debugInfoEnabled(true)', 'app/js/app.js');\"",
    "disable-debug-logging": "node -e \"const shell = require('shelljs'); shell.sed('-i', /$logProvider.debugEnabled\\(true\\)/, '$logProvider.debugEnabled(false)', 'app/js/app.js');\"",
    "enable-debug-logging": "node -e \"const shell = require('shelljs'); shell.sed('-i', /$logProvider.debugEnabled\\(false\\)/, '$logProvider.debugEnabled(true)', 'app/js/app.js');\"",
    "update-index-prod": "node -e \"const shell = require('shelljs'); shell.sed('-i', /^\\s+<script src=\\\"js\\/.*\\.js\\\"><\\/script>\\s*$/, '', 'dist/app/index.html'); shell.sed('-i', /^\\s+<!-- <script src=\\\"trip.min.js\\\"><\\/script> -->\\s*$/, '  <script src=\\\"trip.min.js\\\"></script>', 'dist/app/index.html');\"",
    "update-index-async-prod": "node -e \"const shell = require('shelljs'); shell.sed('-i', /^\\s+\\'js\\/.*\\.js\\',?\\s*$/, '', 'dist/app/index-async.html'); shell.sed('-i', /\\/\\/ \\'trip.min.js\\'/, '\\'trip.min.js\\'', 'dist/app/index-async.html');\"",
    "env": "env",
    "clean": "rimraf dist",
    "lint": "eslint app/js/*.js app/js/**/*.js test/**/*.js",
    "update-version": "node -e \"const pkg=require('./package.json'); require('shelljs').sed('-i', /^\\s*\\.value\\(\\'version\\', \\'.*\\'\\)/, '.value(\\'version\\', \\'' + pkg.version + '\\')', './app/js/version/version.js');\"",
    "prebuild": "mkdirp dist/app/partials --mode=0775 && mkdirp dist/app/css --mode=0775",
    "build": "$npm_execpath run update-version && $npm_execpath run build:scripts && $npm_execpath run build:css",
    "build:scripts": "cd dist/app && ../../node_modules/uglify-js/bin/uglifyjs ../../app/js/*.js ../../app/js/**/*.js --compress --mangle --source-map \"url=trip.min.js.map\"  --output trip.min.js",
    "build:css": "cssmin app/css/app.css > dist/app/css/app.css && cssmin app/css/ie10-viewport-bug-workaround.css > dist/app/css/ie10-viewport-bug-workaround.css",
    "pre-dist": "node -e \"const fs = require('fs'); if ('$npm_execpath'.indexOf('yarn.js') !== -1) { const cp=require('child_process'); const stdout=cp.execSync('yarn licenses generate-disclaimer', {env: { ...process.env, NODE_ENV: 'production'}, encoding: 'utf8'}); fs.writeFileSync('dist/app/LICENSES', stdout); } \"",
    "dist": "copyfiles 'app/node_modules/leaflet/dist/leaflet.js' 'app/node_modules/leaflet/dist/images/*.png' 'app/node_modules/leaflet-draw/dist/leaflet.draw.js' 'app/node_modules/leaflet-draw/dist/images/*' 'app/node_modules/ui-leaflet-draw/dist/ui-leaflet-draw.js' 'app/node_modules/zxcvbn/dist/zxcvbn.js' 'app/node_modules/zxcvbn/dist/zxcvbn.js.map' 'app/node_modules/socket.io-client/dist/socket.io.js*' 'app/node_modules/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js' 'app/node_modules/**/*.min.js' 'app/node_modules/**/*.min.js.map' 'app/node_modules/angular-i18n/angular-locale_en-gb.js' 'app/node_modules/pagedown/*.js' 'app/node_modules/proj4/dist/*.js' 'app/node_modules/pagedown/*.png' 'app/node_modules/ui-leaflet/**/*.min.no-header.js' 'app/node_modules/**/*.css' 'app/node_modules/**/*.css.map' 'app/css/*.min.css' 'app/index*.html' 'app/partials/*.html' 'app/js/**/*.js' dist; copyfiles LICENSE dist/app/",
    "post-dist": "node -e \"const shell = require('shelljs'); shell.mv('dist/app/index-async.html', 'dist/app/index.html'); shell.rm('-f', 'dist/app/index-dev.html')\"",
    "tar-release": "node -e \"require('shelljs').cd('dist'); require('tar').c({gzip: true, sync: true, file: '${npm_package_name}-release-v${npm_package_version}.tgz'},['app'])\"",
    "zip-release": "node -e \"require('shelljs').cd('dist');const Zip=require('adm-zip');const zip=new Zip();zip.addLocalFolder('app','app');zip.writeZip('${npm_package_name}-release-v${npm_package_version}.zip');\"",
    "build-release": "$npm_execpath run disable-debug && $npm_execpath run disable-debug-logging && $npm_execpath run clean && $npm_execpath run build && $npm_execpath run pre-dist && $npm_execpath run dist && $npm_execpath run update-index-prod && $npm_execpath run dist-update-index-async && $npm_execpath run update-index-async-prod && $npm_execpath run post-dist && $npm_execpath run tar-release && $npm_execpath run zip-release && $npm_execpath run enable-debug && $npm_execpath run enable-debug-logging"
  }
}
